{"version":3,"sources":["webpack:///./src/app/layout/tables/tables-routing.module.ts","webpack:///./src/app/layout/tables/tables.component.html","webpack:///./src/app/layout/tables/tables.component.scss","webpack:///./src/app/layout/tables/tables.component.ts","webpack:///./src/app/layout/tables/tables.module.ts"],"names":[],"mappings":"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","file":"tables-tables-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TablesComponent } from './tables.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: TablesComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class TablesRoutingModule {}\n","module.exports = \"\\n <div fxFlex>\\n        <mat-card>\\n            <mat-card-header>\\n                <mat-card-title>Logs</mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n<mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <!-- ID Column -->\\n        <ng-container matColumnDef=\\\"id\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Process </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.position}} </td>\\n        </ng-container>\\n\\n        <!-- Progress Column -->\\n        <ng-container matColumnDef=\\\"progress\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Data </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.weight}} </td>\\n        </ng-container>\\n\\n        <!-- Color Column -->\\n        <ng-container matColumnDef=\\\"color\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\" > <button mat-raised-button (click)=\\\"openDialog()\\\">{{row.symbol}} </button></td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n\\n    <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n</div>\\n</mat-card-content>\\n</mat-card>\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd,\\nth {\\n  width: 25%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL211bS1kZXZlbG9wZXI0L0Rlc2t0b3AvdGVzdC9hbmd1bGFyLW1hdGVyaWFsL2dpdC9hZG1pbi9zcmMvYXBwL2xheW91dC90YWJsZXMvdGFibGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBVyxFQUNkOztBQUVEO0VBQ0ksZ0JBQWU7RUFDZixZQUFXLEVBQ2Q7O0FBRUQ7O0VBRUksV0FBVSxFQUNiIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L3RhYmxlcy90YWJsZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5tYXQtZm9ybS1maWVsZCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG50ZCxcbnRoIHtcbiAgICB3aWR0aDogMjUlO1xufVxuIl19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { DialogLogsComponent } from '../shared/dialog-logs/dialog-logs.component';\n\nexport interface PeriodicElement {\n    name: string;\n    position: string;\n    weight: string;\n    symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n    { position: \"FCC_Fin1\", name: 'chart_of_ac1', weight:\"05/05/19\", symbol: 'Logs' },\n    { position: \"FCC_Fin1\", name: 'chart_of_ac1', weight:\"05/06/19\", symbol: 'Logs' },\n    { position:\"FCC_Fin1\", name: 'chart_of_ac1', weight: \"05/07/19\", symbol: 'Logs' },\n    { position: \"FCC_Fin1\", name: 'chart_of_ac1', weight: \"05/08/19\", symbol: 'Logs' },\n    { position: \"FCC_Fin1\", name: 'chart_of_ac1', weight: \"05/09/19\", symbol: 'Logs' },\n    { position: \"FCC_Fin1\", name: 'chart_of_ac1', weight: \"05/10/19\", symbol: 'Logs' },\n    { position: \"FCC_Fin1\", name: 'chart_of_ac1', weight: \"05/11/19\", symbol: 'Logs' }\n];\n\n@Component({\n    selector: 'app-tables',\n    templateUrl: './tables.component.html',\n    styleUrls: ['./tables.component.scss']\n})\nexport class TablesComponent implements OnInit {\n    animal: string;\n    name: string;\n\n    displayedColumns = ['id', 'progress', 'name', 'color'];\n    dataSource: MatTableDataSource<any>;\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n    constructor(public dialog: MatDialog) {\n        // Create 100 users\n        const users: UserData[] = [];\n        for (let i = 1; i <= 100; i++) {\n            users.push(createNewUser(i));\n        }\n\n        // Assign the data to the data source for the table to render\n        this.dataSource = new MatTableDataSource(ELEMENT_DATA);\n    }\n\n    ngOnInit() {\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    }\n\n    applyFilter(filterValue: string) {\n        filterValue = filterValue.trim(); // Remove whitespace\n        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n        this.dataSource.filter = filterValue;\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n    openDialog(): void {\n        const dialogRef = this.dialog.open(DialogLogsComponent, {\n            width: '550px',\n            data: { name: this.name, animal: this.animal }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.animal = result;\n        });\n    }\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS = [\n    'maroon',\n    'red',\n    'orange',\n    'yellow',\n    'olive',\n    'green',\n    'purple',\n    'fuchsia',\n    'lime',\n    'teal',\n    'aqua',\n    'blue',\n    'navy',\n    'black',\n    'gray'\n];\nconst NAMES = [\n    'Maia',\n    'Asher',\n    'Olivia',\n    'Atticus',\n    'Amelia',\n    'Jack',\n    'Charlotte',\n    'Theodore',\n    'Isla',\n    'Oliver',\n    'Isabella',\n    'Jasper',\n    'Cora',\n    'Levi',\n    'Violet',\n    'Arthur',\n    'Mia',\n    'Thomas',\n    'Elizabeth'\n];\n\nexport interface UserData {\n    id: string;\n    name: string;\n    progress: string;\n    color: string;\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n    const name =\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\n        ' ' +\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\n        '.';\n\n    return {\n        id: id.toString(),\n        name: name,\n        progress: Math.round(Math.random() * 100).toString(),\n        color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n    };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatTableModule } from '@angular/material';\nimport { MatFormFieldModule, MatPaginatorModule,MatDialogModule } from '@angular/material';\nimport { MatInputModule } from '@angular/material';\n\nimport { MatButtonModule, MatCardModule, MatIconModule } from '@angular/material';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\nimport { TablesRoutingModule } from './tables-routing.module';\nimport { TablesComponent } from './tables.component';\nimport { DialogLogsComponent } from '../shared/dialog-logs/dialog-logs.component';\nimport {DashboardModule} from '../dashboard/dashboard.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TablesRoutingModule,\n        MatTableModule,\n        MatFormFieldModule,\n        MatPaginatorModule,\n        MatButtonModule,\n        MatCardModule,\n        MatDialogModule,\n        MatIconModule,\n        MatInputModule,\n        DashboardModule\n    ],\n    declarations: [TablesComponent],\n    entryComponents: [\n        DialogLogsComponent\n      \n    ]\n})\nexport class TablesModule {}\n"],"sourceRoot":""}
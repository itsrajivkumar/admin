{"version":3,"sources":["webpack:///./src/app/layout/tables/tables-routing.module.ts","webpack:///./src/app/layout/tables/tables.component.html","webpack:///./src/app/layout/tables/tables.component.scss","webpack:///./src/app/layout/tables/tables.component.ts","webpack:///./src/app/layout/tables/tables.module.ts"],"names":[],"mappings":"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","file":"tables-tables-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { TablesComponent } from './tables.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: TablesComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class TablesRoutingModule {}\r\n","module.exports = \"\\r\\n <div fxFlex>\\r\\n        <mat-card>\\r\\n            <mat-card-header>\\r\\n                <mat-card-title>Transports</mat-card-title>\\r\\n            </mat-card-header>\\r\\n            <mat-card-content>\\r\\n<mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\" [class.isMobile]=\\\"isMobile\\\" matsort>\\r\\n        <ng-container matColumnDef=\\\"process\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Process </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.process}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"data\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Data </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.data}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"startDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Start Date </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.startDate}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"lastUpdatedDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Last Updated</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastUpdatedDate}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Status</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\" [ngStyle]=\\\"{'color':element.color}\\\" > {{element.status}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"action\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Details </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                <button mat-raised-button class=\\\"bggreen\\\" >loc 1</button><b>==></b>\\r\\n                <button mat-raised-button [ngStyle]=\\\"{'background-color':element.status==='Failed'?'red':'green','color':'white'}\\\" >Loc 2</button><b>==></b>\\r\\n                <button mat-raised-button [ngStyle]=\\\"{'background-color':element.status==='Completed' ?'green':'grey','color':'white'}\\\" >Loc 3</button><b>==></b>\\r\\n                <button mat-raised-button [ngStyle]=\\\"{'background-color':element.status==='Completed'?'green':'grey','color':'white'}\\\">Loc 4</button><b>==></b>\\r\\n                <button mat-raised-button [ngStyle]=\\\"{'background-color':element.status==='Completed'?'green':'grey','color':'white'}\\\" >Loc 5</button>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\\r\\n</mat-card-content>\\r\\n</mat-card>\\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\n.mat-table th,\\ntd {\\n  text-align: center; }\\n\\n.bggreen {\\n  background-color: green;\\n  color: white; }\\n\\n.bgred {\\n  background-color: red;\\n  color: white; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3RhYmxlcy9DOlxccmFqaXZcXHByb2plY3RzXFxub2RlanNcXGdpdFxcYWRtaW4vc3JjXFxhcHBcXGxheW91dFxcdGFibGVzXFx0YWJsZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFXLEVBQ2Q7O0FBRUQ7RUFDSSxnQkFBZTtFQUNmLFlBQVcsRUFDZDs7QUFFRDs7RUFFSSxtQkFBa0IsRUFDckI7O0FBRUQ7RUFDSSx3QkFBdUI7RUFDdkIsYUFDSixFQUFDOztBQUVEO0VBQ0ksc0JBQXFCO0VBQ3JCLGFBQ0osRUFBQyIsImZpbGUiOiJzcmMvYXBwL2xheW91dC90YWJsZXMvdGFibGVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1hdC10YWJsZSB0aCxcclxudGQge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uYmdncmVlbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcclxuICAgIGNvbG9yOiB3aGl0ZVxyXG59XHJcblxyXG4uYmdyZWQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG4gICAgY29sb3I6IHdoaXRlXHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\n\r\nimport { MatDialog, MatDialogRef } from '@angular/material';\r\nimport { DialogLogsComponent } from '../shared/dialog-logs/dialog-logs.component';\r\n\r\nexport interface PeriodicElement {\r\n    data: string;\r\n    process: string;\r\n    startDate: string;\r\n    action: string;\r\n    lastUpdatedDate:string;\r\n    status:string;\r\n    color:string;\r\n}\r\n\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n    { process: \"FCC_Fin1\", data: 'chart_of_ac1', startDate:\"05/05/19 12:10:10\", lastUpdatedDate:\"05/05/19 12:10:10\",status:\"Success\", action: 'Logs',color:\"blue\" },\r\n    { process: \"FCC_Fin1\", data: 'chart_of_ac1', startDate:\"05/06/19 13:10:10\", lastUpdatedDate:\"05/05/19 12:10:10\",status:\"Completed\", action: 'Logs',color:\"green\" },\r\n    { process:\"FCC_Fin1\",  data: 'chart_of_ac1', startDate: \"05/07/19 14:10:10\", lastUpdatedDate:\"05/05/19 12:10:10\",status:\"Failed\", action: 'Logs',color:\"red\" },\r\n    { process: \"FCC_Fin1\", data: 'chart_of_ac1', startDate: \"05/08/19 15:10:10\", lastUpdatedDate:\"05/05/19 12:10:10\",status:\"Success\", action: 'Logs',color:\"blue\" },\r\n    { process: \"FCC_Fin1\", data: 'chart_of_ac1', startDate: \"05/09/19 16:10:10\", lastUpdatedDate:\"05/05/19 12:10:10\",status:\"Completed\", action: 'Logs',color:\"green\" },\r\n    { process: \"FCC_Fin1\", data: 'chart_of_ac1', startDate: \"05/10/19 17:10:10\", lastUpdatedDate:\"05/05/19 12:10:10\",status:\"Failed\", action: 'Logs',color:\"red\" },\r\n    { process: \"FCC_Fin1\", data: 'chart_of_ac1', startDate: \"05/11/19 18:10:10\", lastUpdatedDate:\"05/05/19 12:10:10\",status:\"Success\", action: 'Logs' ,color:\"blue\"}\r\n];\r\n\r\n@Component({\r\n    selector: 'app-tables',\r\n    templateUrl: './tables.component.html',\r\n    styleUrls: ['./tables.component.scss']\r\n})\r\nexport class TablesComponent implements OnInit {\r\n    animal: string;\r\n    name: string;\r\n\r\n    displayedColumns = ['process', 'data', 'startDate', 'lastUpdatedDate','status','action'];\r\n    dataSource: MatTableDataSource<any>;\r\n\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    constructor(public dialog: MatDialog) {\r\n        // Create 100 users\r\n        const users: UserData[] = [];\r\n        for (let i = 1; i <= 100; i++) {\r\n            users.push(createNewUser(i));\r\n        }\r\n\r\n        // Assign the data to the data source for the table to render\r\n        this.dataSource = new MatTableDataSource(ELEMENT_DATA);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    applyFilter(filterValue: string) {\r\n        filterValue = filterValue.trim(); // Remove whitespace\r\n        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n        this.dataSource.filter = filterValue;\r\n        if (this.dataSource.paginator) {\r\n            this.dataSource.paginator.firstPage();\r\n        }\r\n    }\r\n    openDialog(): void {\r\n        const dialogRef = this.dialog.open(DialogLogsComponent, {\r\n            width: '550px',\r\n            data: { name: this.name, animal: this.animal }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            this.animal = result;\r\n        });\r\n    }\r\n}\r\n\r\n/** Constants used to fill up our data base. */\r\nconst COLORS = [\r\n    'maroon',\r\n    'red',\r\n    'orange',\r\n    'yellow',\r\n    'olive',\r\n    'green',\r\n    'purple',\r\n    'fuchsia',\r\n    'lime',\r\n    'teal',\r\n    'aqua',\r\n    'blue',\r\n    'navy',\r\n    'black',\r\n    'gray'\r\n];\r\nconst NAMES = [\r\n    'Maia',\r\n    'Asher',\r\n    'Olivia',\r\n    'Atticus',\r\n    'Amelia',\r\n    'Jack',\r\n    'Charlotte',\r\n    'Theodore',\r\n    'Isla',\r\n    'Oliver',\r\n    'Isabella',\r\n    'Jasper',\r\n    'Cora',\r\n    'Levi',\r\n    'Violet',\r\n    'Arthur',\r\n    'Mia',\r\n    'Thomas',\r\n    'Elizabeth'\r\n];\r\n\r\nexport interface UserData {\r\n    id: string;\r\n    name: string;\r\n    progress: string;\r\n    color: string;\r\n}\r\n\r\n/** Builds and returns a new User. */\r\nfunction createNewUser(id: number): UserData {\r\n    const name =\r\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\r\n        ' ' +\r\n        NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\r\n        '.';\r\n\r\n    return {\r\n        id: id.toString(),\r\n        name: name,\r\n        progress: Math.round(Math.random() * 100).toString(),\r\n        color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\r\n    };\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatTableModule } from '@angular/material';\r\nimport { MatFormFieldModule, MatPaginatorModule,MatDialogModule } from '@angular/material';\r\nimport { MatInputModule } from '@angular/material';\r\n\r\nimport { MatButtonModule, MatCardModule, MatIconModule } from '@angular/material';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\n\r\nimport { TablesRoutingModule } from './tables-routing.module';\r\nimport { TablesComponent } from './tables.component';\r\nimport { DialogLogsComponent } from '../shared/dialog-logs/dialog-logs.component';\r\nimport {DashboardModule} from '../dashboard/dashboard.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        TablesRoutingModule,\r\n        MatTableModule,\r\n        MatFormFieldModule,\r\n        MatPaginatorModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatDialogModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        DashboardModule\r\n    ],\r\n    declarations: [TablesComponent],\r\n    entryComponents: [\r\n        DialogLogsComponent\r\n      \r\n    ]\r\n})\r\nexport class TablesModule {}\r\n"],"sourceRoot":""}